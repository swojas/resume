{"ast":null,"code":"var _jsxFileName = \"E:\\\\practice_web_development\\\\resume\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport jsPDF from 'jspdf';\nimport { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst doc = new jsPDF();\nconst reportTemplateRef = useRef(null);\ndoc.html(reportTemplateRef.current, {\n  async callback(doc) {\n    doc.save('resume');\n  }\n});\nconst handleGeneratePdf = () => {\n  const doc = new jsPDF({\n    format: 'a4',\n    unit: 'px'\n  });\n\n  // Adding the fonts.\n  doc.setFont('Inter-Regular', 'normal');\n  doc.html(reportTemplateRef.current, {\n    async callback(doc) {\n      doc.save('document');\n    }\n  });\n};\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsPDF","useRef","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","doc","reportTemplateRef","html","current","callback","save","handleGeneratePdf","format","unit","setFont","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/practice_web_development/resume/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport jsPDF from 'jspdf';\nimport { useRef } from 'react';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nconst doc = new jsPDF();\nconst reportTemplateRef = useRef(null);\ndoc.html(reportTemplateRef.current, {\n  async callback(doc) {\n     doc.save('resume');\n  },\n});\n\n\n\nconst handleGeneratePdf = () => {\n  const doc = new jsPDF({\n    format: 'a4',\n    unit: 'px',\n  });\n\n  // Adding the fonts.\n  doc.setFont('Inter-Regular', 'normal');\n\n  doc.html(reportTemplateRef.current, {\n    async callback(doc) {\n       doc.save('document');\n    },\n  });\n};\n\nroot.render(\n\n  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjE,MAAMC,GAAG,GAAG,IAAIR,KAAK,CAAC,CAAC;AACvB,MAAMS,iBAAiB,GAAGR,MAAM,CAAC,IAAI,CAAC;AACtCO,GAAG,CAACE,IAAI,CAACD,iBAAiB,CAACE,OAAO,EAAE;EAClC,MAAMC,QAAQA,CAACJ,GAAG,EAAE;IACjBA,GAAG,CAACK,IAAI,CAAC,QAAQ,CAAC;EACrB;AACF,CAAC,CAAC;AAIF,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC9B,MAAMN,GAAG,GAAG,IAAIR,KAAK,CAAC;IACpBe,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE;EACR,CAAC,CAAC;;EAEF;EACAR,GAAG,CAACS,OAAO,CAAC,eAAe,EAAE,QAAQ,CAAC;EAEtCT,GAAG,CAACE,IAAI,CAACD,iBAAiB,CAACE,OAAO,EAAE;IAClC,MAAMC,QAAQA,CAACJ,GAAG,EAAE;MACjBA,GAAG,CAACK,IAAI,CAAC,UAAU,CAAC;IACvB;EACF,CAAC,CAAC;AACJ,CAAC;AAEDT,IAAI,CAACc,MAAM,eAGTf,OAAA,CAACP,KAAK,CAACuB,UAAU;EAAAC,QAAA,eACfjB,OAAA,CAACL,GAAG;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACAzB,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}